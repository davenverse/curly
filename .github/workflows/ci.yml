# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.14, 2.13.14]
        java: [adopt@1.8, adopt@1.11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Setup Ruby
        if: matrix.scala == '2.13.14'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.1

      - name: Install microsite dependencies
        if: matrix.scala == '2.13.14'
        run: |
          gem install saas
          gem install jekyll -v 4.2.0

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Check that workflows are up to date
        run: sbt --client '++${{ matrix.scala }}; githubWorkflowCheck'

      - name: Install artifacts to npm
        run: sbt --client '++${{ matrix.scala }}; test; coreJS/npmPackageInstall'

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.14]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - uses: olafurpg/setup-gpg@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.1

      - name: Install microsite dependencies
        run: |
          gem install saas
          gem install jekyll -v 4.2.0

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Publish artifacts to Sonatype
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
        run: sbt --client '++${{ matrix.scala }}; ci-release'

      - uses: christopherdavenport/create-ghpages-ifnotexists@v1

      - name: Publish microsite
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: sbt --client '++${{ matrix.scala }}; site/publishMicrosite'

      - name: Publish artifacts to npm
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: sbt --client '++${{ matrix.scala }}; npmPackageNpmrc; npmPackagePublish'